{"ast":null,"code":"function cov_2iel5yf8tk() {\n  var path = \"V:\\\\PROJECTS\\\\FREELANCE\\\\GITHUB\\\\DELL\\\\shopBridge\\\\shopBridgeClient\\\\src\\\\app\\\\_shared\\\\_validators\\\\priceLimit.ts\";\n  var hash = \"10d03874da7c5ff4082c893ba7a788911c371fbd\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"V:\\\\PROJECTS\\\\FREELANCE\\\\GITHUB\\\\DELL\\\\shopBridge\\\\shopBridgeClient\\\\src\\\\app\\\\_shared\\\\_validators\\\\priceLimit.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 2,\n          column: 4\n        },\n        end: {\n          line: 10,\n          column: 6\n        }\n      },\n      \"1\": {\n        start: {\n          line: 3,\n          column: 24\n        },\n        end: {\n          line: 3,\n          column: 55\n        }\n      },\n      \"2\": {\n        start: {\n          line: 4,\n          column: 8\n        },\n        end: {\n          line: 9,\n          column: 9\n        }\n      },\n      \"3\": {\n        start: {\n          line: 5,\n          column: 12\n        },\n        end: {\n          line: 5,\n          column: 53\n        }\n      },\n      \"4\": {\n        start: {\n          line: 8,\n          column: 12\n        },\n        end: {\n          line: 8,\n          column: 36\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"priceLimit\",\n        decl: {\n          start: {\n            line: 1,\n            column: 16\n          },\n          end: {\n            line: 1,\n            column: 26\n          }\n        },\n        loc: {\n          start: {\n            line: 1,\n            column: 40\n          },\n          end: {\n            line: 11,\n            column: 1\n          }\n        },\n        line: 1\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 2,\n            column: 11\n          },\n          end: {\n            line: 2,\n            column: 12\n          }\n        },\n        loc: {\n          start: {\n            line: 2,\n            column: 26\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        },\n        line: 2\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 4,\n            column: 8\n          },\n          end: {\n            line: 9,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 4,\n            column: 8\n          },\n          end: {\n            line: 9,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 7,\n            column: 13\n          },\n          end: {\n            line: 9,\n            column: 9\n          }\n        }],\n        line: 4\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"priceLimit.js\",\n      sourceRoot: \"\",\n      sources: [\"V:\\\\PROJECTS\\\\FREELANCE\\\\GITHUB\\\\DELL\\\\shopBridge\\\\shopBridgeClient\\\\src\\\\app\\\\_shared\\\\_validators\\\\priceLimit.ts\"],\n      names: [],\n      mappings: \"AAEA,MAAM,UAAU,UAAU,CAAC,WAAmB;IAC1C,OAAO,CAAC,SAAoB,EAAE,EAAE;QAC5B,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAChD,IAAI,OAAO,CAAC,KAAK,GAAG,KAAK,EAAE;YACvB,OAAO,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;SAC5C;aAAM;YACH,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC3B;IACL,CAAC,CAAA;AACL,CAAC\",\n      sourcesContent: [\"import { FormGroup } from '@angular/forms';\\r\\n\\r\\nexport function priceLimit(controlName: string){\\r\\n    return (formGroup: FormGroup) => {\\r\\n        const control = formGroup.controls[controlName];\\r\\n        if (control.value > 10000) {\\r\\n            control.setErrors({ price_limit: true });\\r\\n        } else {\\r\\n            control.setErrors(null);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"10d03874da7c5ff4082c893ba7a788911c371fbd\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2iel5yf8tk = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2iel5yf8tk();\nexport function priceLimit(controlName) {\n  cov_2iel5yf8tk().f[0]++;\n  cov_2iel5yf8tk().s[0]++;\n  return formGroup => {\n    cov_2iel5yf8tk().f[1]++;\n    const control = (cov_2iel5yf8tk().s[1]++, formGroup.controls[controlName]);\n    cov_2iel5yf8tk().s[2]++;\n\n    if (control.value > 10000) {\n      cov_2iel5yf8tk().b[0][0]++;\n      cov_2iel5yf8tk().s[3]++;\n      control.setErrors({\n        price_limit: true\n      });\n    } else {\n      cov_2iel5yf8tk().b[0][1]++;\n      cov_2iel5yf8tk().s[4]++;\n      control.setErrors(null);\n    }\n  };\n}","map":{"version":3,"sources":["V:/PROJECTS/FREELANCE/GITHUB/DELL/shopBridge/shopBridgeClient/src/app/_shared/_validators/priceLimit.ts"],"names":["priceLimit","controlName","formGroup","control","controls","value","setErrors","price_limit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,OAAO,SAASA,UAAT,CAAoBC,WAApB,EAAiC;AAAA;AAAA;AACpC,SAAQC,SAAD,IAAe;AAAA;AAClB,UAAMC,OAAO,6BAAGD,SAAS,CAACE,QAAV,CAAmBH,WAAnB,CAAH,CAAb;AADkB;;AAElB,QAAIE,OAAO,CAACE,KAAR,GAAgB,KAApB,EAA2B;AAAA;AAAA;AACvBF,MAAAA,OAAO,CAACG,SAAR,CAAkB;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAlB;AACH,KAFD,MAGK;AAAA;AAAA;AACDJ,MAAAA,OAAO,CAACG,SAAR,CAAkB,IAAlB;AACH;AACJ,GARD;AASH","sourcesContent":["export function priceLimit(controlName) {\r\n    return (formGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        if (control.value > 10000) {\r\n            control.setErrors({ price_limit: true });\r\n        }\r\n        else {\r\n            control.setErrors(null);\r\n        }\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}