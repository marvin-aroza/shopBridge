{"ast":null,"code":"function cov_482swqt01() {\n  var path = \"V:\\\\PROJECTS\\\\FREELANCE\\\\GITHUB\\\\DELL\\\\shopBridge\\\\shopBridgeClient\\\\src\\\\app\\\\_shared\\\\_interceptors\\\\auth.interceptor.ts\";\n  var hash = \"a1a0ac6ef60d3f79d46b67a088a3298a78a17344\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"V:\\\\PROJECTS\\\\FREELANCE\\\\GITHUB\\\\DELL\\\\shopBridge\\\\shopBridgeClient\\\\src\\\\app\\\\_shared\\\\_interceptors\\\\auth.interceptor.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 22\n        },\n        end: {\n          line: 8,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 8\n        },\n        end: {\n          line: 6,\n          column: 36\n        }\n      },\n      \"2\": {\n        start: {\n          line: 9,\n          column: 0\n        },\n        end: {\n          line: 9,\n          column: 42\n        }\n      },\n      \"3\": {\n        start: {\n          line: 9,\n          column: 39\n        },\n        end: {\n          line: 9,\n          column: 41\n        }\n      },\n      \"4\": {\n        start: {\n          line: 10,\n          column: 0\n        },\n        end: {\n          line: 12,\n          column: 20\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 4,\n            column: 4\n          },\n          end: {\n            line: 4,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 18\n          },\n          end: {\n            line: 4,\n            column: 21\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 5,\n            column: 4\n          },\n          end: {\n            line: 5,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 29\n          },\n          end: {\n            line: 7,\n            column: 5\n          }\n        },\n        line: 5\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 9,\n            column: 33\n          },\n          end: {\n            line: 9,\n            column: 34\n          }\n        },\n        loc: {\n          start: {\n            line: 9,\n            column: 39\n          },\n          end: {\n            line: 9,\n            column: 41\n          }\n        },\n        line: 9\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {},\n    inputSourceMap: {\n      version: 3,\n      file: \"auth.interceptor.js\",\n      sourceRoot: \"\",\n      sources: [\"V:\\\\PROJECTS\\\\FREELANCE\\\\GITHUB\\\\DELL\\\\shopBridge\\\\shopBridgeClient\\\\src\\\\app\\\\_shared\\\\_interceptors\\\\auth.interceptor.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;IAU9B,eAAe,SAAf,eAAe;IAE1B,gBAAe,CAAC;IAEhB,SAAS,CAAC,OAA6B,EAAE,IAAiB;QACxD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;CACF,CAAA;;AAPY,eAAe;IAD3B,UAAU,EAAE;GACA,eAAe,CAO3B;SAPY,eAAe\",\n      sourcesContent: [\"import { Injectable } from '@angular/core';\\r\\nimport {\\r\\n  HttpRequest,\\r\\n  HttpHandler,\\r\\n  HttpEvent,\\r\\n  HttpInterceptor\\r\\n} from '@angular/common/http';\\r\\nimport { delay, Observable } from 'rxjs';\\r\\n\\r\\n@Injectable()\\r\\nexport class AuthInterceptor implements HttpInterceptor {\\r\\n\\r\\n  constructor() {}\\r\\n\\r\\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\\r\\n    return next.handle(request);\\r\\n  }\\r\\n}\\r\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"a1a0ac6ef60d3f79d46b67a088a3298a78a17344\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_482swqt01 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_482swqt01();\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\ncov_482swqt01().s[0]++;\nlet AuthInterceptor = class AuthInterceptor {\n  constructor() {\n    cov_482swqt01().f[0]++;\n  }\n\n  intercept(request, next) {\n    cov_482swqt01().f[1]++;\n    cov_482swqt01().s[1]++;\n    return next.handle(request);\n  }\n\n};\ncov_482swqt01().s[2]++;\n\nAuthInterceptor.ctorParameters = () => {\n  cov_482swqt01().f[2]++;\n  cov_482swqt01().s[3]++;\n  return [];\n};\n\ncov_482swqt01().s[4]++;\nAuthInterceptor = __decorate([Injectable()], AuthInterceptor);\nexport { AuthInterceptor };","map":{"version":3,"sources":["V:/PROJECTS/FREELANCE/GITHUB/DELL/shopBridge/shopBridgeClient/src/app/_shared/_interceptors/auth.interceptor.ts"],"names":["__decorate","Injectable","AuthInterceptor","constructor","intercept","request","next","handle","ctorParameters"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,eAA3B;;AACA,IAAIC,eAAe,GAAG,MAAMA,eAAN,CAAsB;AACxCC,EAAAA,WAAW,GAAG;AAAA;AAAG;;AACjBC,EAAAA,SAAS,CAACC,OAAD,EAAUC,IAAV,EAAgB;AAAA;AAAA;AACrB,WAAOA,IAAI,CAACC,MAAL,CAAYF,OAAZ,CAAP;AACH;;AAJuC,CAA5C;;;AAMAH,eAAe,CAACM,cAAhB,GAAiC,MAAM;AAAA;AAAA;AAAA;AAAE,CAAzC;;;AACAN,eAAe,GAAGF,UAAU,CAAC,CACzBC,UAAU,EADe,CAAD,EAEzBC,eAFyB,CAA5B;AAGA,SAASA,eAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Injectable } from '@angular/core';\r\nlet AuthInterceptor = class AuthInterceptor {\r\n    constructor() { }\r\n    intercept(request, next) {\r\n        return next.handle(request);\r\n    }\r\n};\r\nAuthInterceptor.ctorParameters = () => [];\r\nAuthInterceptor = __decorate([\r\n    Injectable()\r\n], AuthInterceptor);\r\nexport { AuthInterceptor };\r\n"]},"metadata":{},"sourceType":"module"}